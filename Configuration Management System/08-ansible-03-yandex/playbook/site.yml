---
- name: NGINX | Install Nginx
  hosts: lighthouse
  become: true
  handlers:
    - name: Start-nginx
      ansible.builtin.service:
        name: nginx
        state: started
    - name: Reload-nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

  tasks:
    - name: Install epel-release
      ansible.builtin.dnf:
        name: epel-release
        state: present
        update_cache: true

    - name: NGINX | Install NGINX
      ansible.builtin.dnf:
        name: nginx
        state: present
        update_cache: true
      register: nginx_install
      changed_when: nginx_install.rc == 0
      notify: Start-nginx

    - name: NGINX | Create general configuration for Lighthouse
      ansible.builtin.template:
        src: templates/lighthouse_nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: "0644"
      notify: Reload-nginx

- name: Install Lighthouse
  hosts: lighthouse
  become: true
  handlers:
    - name: Restart-nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

  pre_tasks:
    - name: Lighthouse | Install dependencies
      ansible.builtin.dnf:
        name: git
        state: present
        update_cache: true

  tasks:
    - name: Create LightHouse directory
      ansible.builtin.file:
        path: "{{ lighthouse_location_dir }}"
        state: directory
        mode: "0755"

    - name: Ensure safe directory for Git
      community.general.git_config:
        name: safe.directory
        value: /var/www/lighthouse
        scope: global
        state: present

    - name: Lighthouse | Clone or update Lighthouse repository
      ansible.builtin.git:
        repo: "{{ lighthouse_vcs }}"
        version: master
        dest: "{{ lighthouse_location_dir }}"
        update: true  # Обновляем код, если репозиторий уже склонирован
        force: true
      register: git_clone_result
      until: git_clone_result is succeeded
      retries: 3  # Попытки повторения, если возникнет ошибка
      delay: 5    # Задержка перед повторной попыткой

    - name: Ensure correct permissions for LightHouse files
      ansible.builtin.command:
        cmd: "chown -R nginx:nginx /var/www/lighthouse"
      args:
        chdir: /var/www/lighthouse
      changed_when: false

    - name: Ensure correct file modes for LightHouse files
      ansible.builtin.command:
        cmd: "chmod -R 755 /var/www/lighthouse"
      args:
        chdir: /var/www/lighthouse
      changed_when: false
      notify: Restart-nginx

- name: Install Clickhouse # check on host: clickhouse-client -h 127.0.0.1
  hosts: clickhouse
  become: true
  handlers:
    - name: Start clickhouse service
      ansible.builtin.service:
        name: clickhouse-server
        state: started
  tasks:
    - name: Get Clickhouse
      block:
        - name: Get distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
            mode: "0744"
          with_items: "{{ clickhouse_packages }}"
          check_mode: false

    - name: Install clickhouse packages
      ansible.builtin.dnf:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm
          - clickhouse-client-{{ clickhouse_version }}.x86_64.rpm
          - clickhouse-server-{{ clickhouse_version }}.x86_64.rpm
        state: present
        disable_gpg_check: true
      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers # flush_handlers: Это действие, которое сообщает Ansible выполнить все текущие обработчики (handlers) сразу же

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  become: true
  handlers:
    - name: Restart vector service
      ansible.builtin.service:
        name: vector
        state: restarted

  tasks:
    - name: Vector | Install rpm
      ansible.builtin.dnf:
        name: "{{ vector_url }}"
        state: present
        disable_gpg_check: true

    - name: Vector | Template config
      ansible.builtin.template:
        src: templates/vector.config.j2
        dest: "/etc/vector/vector.yaml"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        validate: vector validate --config-yaml %s

    - name: Vector | Create systemd unit
      ansible.builtin.template:
        src: "vector.service.j2"
        dest: "/etc/systemd/system/vector.service"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Vector | Start service
      ansible.builtin.systemd:
        name: vector
        state: started
        daemon_reload: true
